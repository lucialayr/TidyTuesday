name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.55, label="* Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.55, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.56, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
mta_art = mta_art[order(mta_art$art), ]
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
mta_art$art = factor(mta_art$art,
levels = (c('No Art', 'Other Art', 'Mosaics*')))
mta_art = mta_art[order(mta_art$art), ]
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
mta_art = tuesdata$mta_art %>%
mutate(bronze = ifelse(grepl("bronze", art_material, ignore.case = TRUE), 1, 0),
stone = ifelse(grepl("stone", art_material, ignore.case = TRUE), 1, 0),
glass = ifelse(grepl("glass", art_material, ignore.case = TRUE), 1, 0),
stone = ifelse(grepl("stone", art_material, ignore.case = TRUE), 1, 0),
ceramic = ifelse(grepl("ceramic", art_material, ignore.case = TRUE), 1, 0),
steel = ifelse(grepl("steel", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(other = ifelse(rowSums(across(c(bronze, stone, glass, ceramic, steel))) == 0, 1, 0)) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
pivot_longer(values_to = "present",
names_to = "material",
cols = c(bronze, stone, glass, ceramic, steel, other)) %>%
filter(present == 1) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -present) %>%
right_join(stops) %>%
select(art, stop_name) %>%
unique()
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*')) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -tiles, -mosaic) %>%
right_join(stops) %>%
select(art, stop_name) %>%
st_as_sf() %>%
mutate(art = ifelse(is.na(art), "No Art", str_to_title(art))) %>%
unique()
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*')) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -tiles, -mosaic) %>%
right_join(stops) %>%
select(art, stop_name, geometry) %>%
st_as_sf() %>%
mutate(art = ifelse(is.na(art), "No Art", str_to_title(art))) %>%
unique()
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*')) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -tiles, -mosaic) %>%
right_join(stops) %>%
select(art, stop_name) %>%
unique()
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*')) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -tiles, -mosaic) %>%
right_join(stops) %>%
select(art, stop_name) %>%
unique() %>%
right_join(stops) %>%
select(art, stop_name, geometry) %>%
st_as_sf() %>%
mutate(art = ifelse(is.na(art), "No Art", str_to_title(art))) %>%
unique()
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*')) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -tiles, -mosaic) %>%
right_join(stops) %>%
select(art, stop_name) %>%
unique()
View(mta_art)
stops = read_sf('ext/nyu_2451_34759.shp') %>%
filter(GEOID != 36085) %>%
group_by(stop_name) %>%
slice(n = 1) %>%
mutate(stop_tag = str_squish(stop_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", "")))
stops = read_sf('ext/nyu_2451_34759.shp') %>%
filter(GEOID != 36085) %>%
group_by(stop_name) %>%
slice(1) %>%
mutate(stop_tag = str_squish(stop_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", "")))
borders = st_read('ext/doitt_shoreline_2012.gpkg') %>%
st_simplify() %>%
st_transform(st_crs(stops)) %>%
st_crop(st_buffer(st_as_sfc(st_bbox(stops)), 800))
mta_art = tuesdata$mta_art %>%
mutate(bronze = ifelse(grepl("bronze", art_material, ignore.case = TRUE), 1, 0),
stone = ifelse(grepl("stone", art_material, ignore.case = TRUE), 1, 0),
glass = ifelse(grepl("glass", art_material, ignore.case = TRUE), 1, 0),
stone = ifelse(grepl("stone", art_material, ignore.case = TRUE), 1, 0),
ceramic = ifelse(grepl("ceramic", art_material, ignore.case = TRUE), 1, 0),
steel = ifelse(grepl("steel", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(other = ifelse(rowSums(across(c(bronze, stone, glass, ceramic, steel))) == 0, 1, 0)) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
pivot_longer(values_to = "present",
names_to = "material",
cols = c(bronze, stone, glass, ceramic, steel, other)) %>%
filter(present == 1) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -present) %>%
right_join(stops) %>%
unique()
st_as_sf() %>%
mutate(material = ifelse(is.na(material), "No Art", str_to_title(material))) %>%
unique()
mta_art = tuesdata$mta_art %>%
mutate(bronze = ifelse(grepl("bronze", art_material, ignore.case = TRUE), 1, 0),
stone = ifelse(grepl("stone", art_material, ignore.case = TRUE), 1, 0),
glass = ifelse(grepl("glass", art_material, ignore.case = TRUE), 1, 0),
stone = ifelse(grepl("stone", art_material, ignore.case = TRUE), 1, 0),
ceramic = ifelse(grepl("ceramic", art_material, ignore.case = TRUE), 1, 0),
steel = ifelse(grepl("steel", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(other = ifelse(rowSums(across(c(bronze, stone, glass, ceramic, steel))) == 0, 1, 0)) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
pivot_longer(values_to = "present",
names_to = "material",
cols = c(bronze, stone, glass, ceramic, steel, other)) %>%
filter(present == 1) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -present) %>%
right_join(stops) %>%
st_as_sf() %>%
mutate(material = ifelse(is.na(material), "No Art", str_to_title(material))) %>%
unique()
mta_art$material = factor(mta_art$material,
levels = c('No Art', 'Other', 'Ceramic',  'Glass',  'Steel', 'Bronze' , 'Stone'))
mta_art = mta_art[order(mta_art$material), ]
ggplot() + theme_void() +
ggtitle(' What is NYC Metro Station Art made of?') +
geom_sf(data = borders, color = 'seashell4', linewidth = .2) +
geom_sf(data = mta_art, aes(color = material, shape = material), size = .5, stroke = .3) +
scale_color_manual(values = c('Bronze' = 'goldenrod', 'Stone' = 'sienna2', 'Glass' = 'seagreen3',
'Ceramic' = 'wheat2', 'Steel' = 'steelblue', 'Other' = 'seashell3', 'No Art' = 'black'),
name = '') +
scale_shape_manual(values = c('Bronze' = 3, 'Stone' = 4, 'Glass' = 0,
'Ceramic' = 15, 'Steel' = 5, 'Other' = 18, 'No Art' = 18),
name = '') +
theme(legend.background = element_rect(fill='#f4f2f0', color = NA),
legend.position = c(.15, .8),
text = element_text(size = 12),
legend.box.background = element_rect(fill='#f4f2f0', color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA),
plot.background = element_rect(fill = '#f4f2f0', colour = NA),
strip.background = element_rect(fill = '#f4f2f0', color = NA)) +
guides(shape = guide_legend(override.aes = list(size = 1, stroke = .75),
reverse = TRUE),
color = guide_legend(reverse = TRUE))
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*')) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -tiles, -mosaic) %>%
right_join(stops) %>%
select(art, stop_name, geometry) %>%
st_as_sf() %>%
mutate(art = ifelse(is.na(art), "No Art", str_to_title(art))) %>%
unique()
mta_art$art = factor(mta_art$art,
levels = (c('No Art', 'Other Art', 'Mosaics*')))
mta_art = mta_art[order(mta_art$art), ]
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
stops = read_sf('ext/nyu_2451_34759.shp') %>%
filter(GEOID != 36085) %>%
#group_by(stop_name) %>%
#slice(1) %>%
mutate(stop_tag = str_squish(stop_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", "")))
borders = st_read('ext/doitt_shoreline_2012.gpkg') %>%
st_simplify() %>%
st_transform(st_crs(stops)) %>%
st_crop(st_buffer(st_as_sfc(st_bbox(stops)), 800))
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*')) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -tiles, -mosaic) %>%
right_join(stops) %>%
select(art, stop_name, geometry) %>%
st_as_sf() %>%
mutate(art = ifelse(is.na(art), "No Art", str_to_title(art))) %>%
unique()
mta_art$art = factor(mta_art$art,
levels = (c('No Art', 'Other Art', 'Mosaics*')))
mta_art = mta_art[order(mta_art$art), ]
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*'))
mta_art = tuesdata$mta_art %>%
mutate(tiles = ifelse(grepl("tile", art_material, ignore.case = TRUE), 1, 0),
mosaic = ifelse(grepl("mosaic", art_material, ignore.case = TRUE), 1, 0)) %>%
mutate(art = ifelse(rowSums(across(c(tiles, mosaic))) == 0, 'Other Art', 'Mosaics*')) %>%
filter(agency == 'NYCT') %>%
mutate(stop_tag = str_squish(station_name)) %>%
mutate(stop_tag = tolower(str_replace_all(stop_tag, " ", ""))) %>%
select(-artist, -art_title, -art_date, -art_image_link, -art_description, -art_material, -agency, -station_name, -line, -tiles, -mosaic) %>%
right_join(stops) %>%
select(art, stop_name, geometry) %>%
st_as_sf() %>%
mutate(art = ifelse(is.na(art), "No Art", str_to_title(art))) %>%
unique()
mta_art$art = factor(mta_art$art,
levels = (c('No Art', 'Other Art', 'Mosaics*')))
mta_art = mta_art[order(mta_art$art), ]
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5))) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE))) +
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .9),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE)) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggsave("20250722.png", dpi = 600, width = 6)
ggsave("20250722.png", dpi = 600)
ggsave("20250722.png", dpi = 600, height = 9, width = 6)
ggsave("20250722.png", dpi = 600, height = 8, width = 5)
ggsave("20250722.png", dpi = 600, height = 7, width = 4)
ggsave("20250722.png", dpi = 800, height = 7, width = 4)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .95),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE)) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggsave("20250722.png", dpi = 800, height = 7, width = 4)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.4, .91),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE)) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggsave("20250722.png", dpi = 800, height = 7, width = 4)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.34, .91),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE)) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggsave("20250722.png", dpi = 800, height = 7, width = 4)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.36, .91),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE)) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggsave("20250722.png", dpi = 800, height = 7, width = 4)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.36, .905),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE)) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggsave("20250722.png", dpi = 800, height = 7, width = 4)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.365, .905),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE)) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggsave("20250722.png", dpi = 800, height = 7, width = 4)
ggplot() + theme_void() +
geom_sf(data = borders, color = 'black', fill = '#f4f2f0', linewidth = .2) +
geom_sf(data = mta_art, aes(fill = art), color = 'black', stroke = .3, shape = 23) +
scale_fill_manual(values = c('Mosaics*' = 'sienna2', 'Other Art' = 'goldenrod2', 'No Art' = '#00000000'),
name = 'NYC metro stations that feature ... ') +
theme(legend.background = element_rect(fill=NA, color = NA),
legend.position = c(.3625, .905),
legend.direction = 'vertical',
text = element_text(size = 12),
legend.box.background = element_rect(fill = NA, color = NA),
panel.background = element_rect(fill = '#f4f2f0', colour = NA)) +
guides(fill = guide_legend(override.aes = list(size = 2, stroke = .5),
reverse = TRUE)) +
annotate(geom="text", x=-73.9, y=40.555, label="*Art descriptions that include the word 'mosaic' or 'tile' are categorized as mosaics.\nSource: MTA Arts & Design, NYC Open Data",
color="black", size = 2, fontface = 'italic')
ggsave("20250722.png", dpi = 800, height = 7, width = 4)
