r1 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0361E-1229N.tif'))
r2 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0361E-1230N.tif'))
r3 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0362E-1229N.tif'))
r4 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0362E-1230N.tif'))
r = terra::mosaic(r1, r2, r3, r4)
#writeRaster(r, paste0('PlanetBaseMaps2024_global_monthly_mosaic/', month, '_stiched.tif'))
return(r)
}
for (month in c('2501', '2502', '2503', '2504', '2505', '2506', '2507', '2508', '2509', '2510', '2511', '2512')) {
r = stich_monthy_tile(month)
plotRGB(r)
}
library(terra)
library(tidyverse)
library(sf)
setwd("~/Desktop/NPS/SpectralUnmixing/ExploratoryJOTR")
month = '2501'
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands") %>%
terra::vect()
plot(alliances)
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands") %>%
terra::vect()
r = stich_monthy_tile(month)
stich_monthy_tile = function(month) {
r1 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0361E-1229N.tif'))
r2 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0361E-1230N.tif'))
r3 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0362E-1229N.tif'))
r4 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0362E-1230N.tif'))
r = terra::mosaic(r1, r2, r3, r4)
#writeRaster(r, paste0('PlanetBaseMaps2024_global_monthly_mosaic/', month, '_stiched.tif'))
return(r)
}
r = stich_monthy_tile(month)
p = crop(alliances, r)
plot(p)
plotRGB(r)
lines(alliances, lwd=2, col="red")
plot(alliances)
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands") %>%
st_transform(4326) %>%
terra::vect()
plot(alliances)
plotRGB(r)
lines(alliances, lwd=2, col="red")
alliances = terra::project(alliances, r)
plotRGB(r)
lines(alliances, lwd=2, col="red")
plot(alliances)
r
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands") %>%
terra::vect()
plotRGB(r)
lines(alliances, lwd=1, col="red")
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands") %>%
terra::vect()
r = stich_monthy_tile(month)
r = stich_monthy_tile(month)
alliances = terra::project(alliances, r)
plotRGB(r)
lines(alliances, lwd=1, col="red")
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands")
View(alliances)
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands",
Poly_ID == 2825) %>%
terra::vect()
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands",
Poly_ID == 2825) %>%
terra::vect()
plot(alliances, col = "red", lwd = 0.5, border = "black")
alliances  = st_read('jotrgeodata.gpkg', layer = 'JOTR_VegPolys', quiet = T) %>%
filter(MapUnit_Name == "Red Brome - Mediterranean Grass Semi-Natural Herbaceous Stands",
Poly_ID == 2825) %>%
terra::vect()
stich_monthy_tile = function(month) {
r1 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0361E-1229N.tif'))
r2 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0361E-1230N.tif'))
r3 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0362E-1229N.tif'))
r4 = terra::rast(paste0('PlanetBaseMaps2024_global_monthly_tiles/', month, '-0362E-1230N.tif'))
r = terra::mosaic(r1, r2, r3, r4)
#writeRaster(r, paste0('PlanetBaseMaps2024_global_monthly_mosaic/', month, '_stiched.tif'))
return(r)
}
for (month in c('2501', '2502', '2503', '2504', '2505', '2506', '2507', '2508', '2509', '2510', '2511', '2512')) {
r = stich_monthy_tile(month)
alliances = terra::project(alliances, r)
plotRGB(crop(r, alliances))
lines(alliances, lwd=0.5, col="red")
}
setwd("~/Desktop/NPS/JOSHJOTR")
setwd("~/Desktop/NPS/JOSHJOTR")
library(tidyverse)
df = read_csv('data/MOJN_IU_2020_Redacted/Data_Redacted/TreeCount.csv')
unique(df$Species)
View(df)
df = read_csv('data/MOJN_IU_2020_Redacted/Data_Redacted/TreeCount.csv') %>%
filter(Species == "YUBR")
length(unique(df$Loc_Name))
195/51
library(sf)
points = st_read(dsn = "inputs/jotrgeodata.gpkg")
points = st_read(dsn = "data/jotrgeodata.gpkg")
head(points)
plot(points)
df = read_csv('data/MOJN_IU_2020_Redacted/Data_Redacted/TreeCount.csv') %>%
filter(Species == "YUBR") %>%
select(Loc_Name)
points = st_read(dsn = "data/jotrgeodata.gpkg") %>%
mutate(Loc = gsub("A\\.", "", Plot_Code))
head(points)
head(df)
sites = left_join(df, points)
points = st_read(dsn = "data/jotrgeodata.gpkg") %>%
mutate(Loc_Name = gsub("A\\.", "", Plot_Code))
sites = left_join(df, points)
plot(st_geometry(sites))
View(sites)
sites = left_join(df, points) %>%
unique()
plot(sites)
sites = left_join(df, points) %>%
sf::st_as_sf()
plot(sites)
ggplot() +
geom_sf(data = sites, color = 'red')
ggplot() + theme_bw() +
geom_sf(data = sites, color = 'red')
df = read_csv('data/MOJN_IU_2020_Redacted/Data_Redacted/TreeCount.csv') %>%
filter(Species == "YUBR")
df = read_csv('data/MOJN_IU_2020_Redacted/Data_Redacted/TreeCount.csv') %>%
filter(Species == "YUBR") %>%
select(Loc_Name, Unit_Code)
ggplot() + theme_bw() +
geom_sf(data = sites,  aes(color = Unit_Code))
sites = left_join(df, points) %>%
sf::st_as_sf()
ggplot() + theme_bw() +
geom_sf(data = sites,  aes(color = Unit_Code))
df = read_csv('data/MOJN_IU_2020_Redacted/Data_Redacted/TreeCount.csv') %>%
filter(Species == "YUBR", Unit_Code = 'JOTR') %>%
select(Loc_Name, Unit_Code)
df = read_csv('data/MOJN_IU_2020_Redacted/Data_Redacted/TreeCount.csv') %>%
filter(Species == "YUBR", Unit_Code == 'JOTR') %>%
select(Loc_Name, Unit_Code)
points = st_read(dsn = "data/jotrgeodata.gpkg") %>%
mutate(Loc_Name = gsub("A\\.", "", Plot_Code))
sites = left_join(df, points) %>%
unique() %>%
sf::st_as_sf()
ggplot() + theme_bw() +
geom_sf(data = sites,  aes(color = Unit_Code))
View(sites)
sites = left_join(df, points) %>%
unique() %>%
filter(!is.na(X_Coord)) %>%
sf::st_as_sf()
ggplot() + theme_bw() +
geom_sf(data = sites,  aes(color = Unit_Code))
setwd("~/Desktop/TidyTuesday")
library(tidyverse)
tuesdata <- tidytuesdayR::tt_load('2025-07-08')
users = tuesdata$users
color_ranks = tuesdata$color_ranks
answers = tuesdata$answers
ggplot() +
geom_jitter(data = color_ranks,
aes(x = rank, y = rank, color = hex)) +
scale_color_manual(values = color_ranks$hex) +
theme(legend.position = 'none')
library(ggridges)
color_codes = head(color_ranks, 5) %>%
rename('true_color' = hex)
real_vs_names = right_join(color_codes, answers) %>%
group_by(rank) %>%
slice_sample(n = 1000)
ggplot() + theme_bw() +
geom_jitter(data = real_vs_names, width = 3, height = .5,
aes(y = color, x = 1, color = hex))  +
scale_color_identity() +
theme(legend.position = 'none')
answers_modified <- full_join(answers, users) %>%
filter(rank == 5) %>%
select(colorblind, hex) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(redness = rgb[1],
greenness = rgb[2],
blueness = rgb[3]) %>%
ungroup() %>%
group_by(colorblind) %>%
slice_sample(n = 5000)
ggplot() + theme_void() +
geom_jitter(data = answers_modified, width = 0, height = .1, size = 2,
aes(y =  colorblind,  x = redness, color = hex))  +
scale_y_continuous(breaks = c(0, 1), labels = c('not colorblind', 'colorblind')) +
scale_x_continuous(breaks = seq(0, 255, by = 50)) +
scale_color_identity() +
theme(legend.position = 'none',
axis.title.x = element_text(size = 20),
axis.text = element_text(size = 20))
View(answers_modified)
answers_modified <- full_join(answers, users) %>%
filter(rank == 5) %>%
select(colorblind, hex) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(redness = rgb[1],
greenness = rgb[2],
blueness = rgb[3]) %>%
ungroup() %>%
group_by(colorblind) %>%
pivot_longer(cols = c(redness, greenness, blueness),
names_to = 'color_component',
values_to = 'value')
answers_rgb = full_join(answers, users) %>%
filter(rank == 5) %>%
select(colorblind, hex) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(redness = rgb[1],
greenness = rgb[2],
blueness = rgb[3]) %>%
ungroup() %>%
group_by(colorblind) %>%
pivot_longer(cols = c(redness, greenness, blueness),
names_to = 'color_component',
values_to = 'value')
ggplot() +
geom_density_ridges(data = answers_rgb,
aes(x = value, y = colorblind, fill = color_component),
scale = 1.5, alpha = 0.8)
ggplot() +
geom_density_ridges(data = answers_rgb,
aes(x = value, fill = color_component),
scale = 1.5, alpha = 0.8)
ggplot() +
geom_density_ridges(data = answers_rgb,
aes(x = value, y = color_component),
scale = 1.5, alpha = 0.8)
ggplot() +
geom_density_ridges(data = answers_rgb,
aes(x = value, y = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~colorblind)
ggplot() +
geom_density_ridges(data = answers_rgb,
aes(x = value, y = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~colorblind, ncol = 1)
ggplot() + theme_void() +
geom_jitter(data = answers_modified, width = 0, height = .1, size = 2,
aes(y =  colorblind,  x = redness, color = hex))  +
scale_y_continuous(breaks = c(0, 1), labels = c('not colorblind', 'colorblind')) +
scale_x_continuous(breaks = seq(0, 255, by = 50)) +
scale_color_identity() +
theme(legend.position = 'none',
axis.title.x = element_text(size = 20),
axis.text = element_text(size = 20))
answers_ridges = answers_rgb %>%
pivot_longer(cols = c(redness, greenness, blueness),
names_to = 'color_component',
values_to = 'value')
answers_rgb = full_join(answers, users) %>%
filter(rank == 5) %>%
select(colorblind, hex) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(redness = rgb[1],
greenness = rgb[2],
blueness = rgb[3]) %>%
ungroup() %>%
group_by(colorblind)
answers_ridges = answers_rgb %>%
pivot_longer(cols = c(redness, greenness, blueness),
names_to = 'color_component',
values_to = 'value')
ggplot() + theme_void() +
geom_jitter(data = answers_rgb, width = 0, height = .1, size = 2,
aes(y =  colorblind,  x = redness, color = hex))  +
scale_y_continuous(breaks = c(0, 1), labels = c('not colorblind', 'colorblind')) +
scale_x_continuous(breaks = seq(0, 255, by = 50)) +
scale_color_identity() +
theme(legend.position = 'none',
axis.title.x = element_text(size = 20),
axis.text = element_text(size = 20))
answers_rgb = full_join(answers, users) %>%
filter(rank == 5, !is.na(colorblind)) %>%
select(colorblind, hex) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(redness = rgb[1],
greenness = rgb[2],
blueness = rgb[3]) %>%
ungroup() %>%
group_by(colorblind)
answers_ridges = answers_rgb %>%
pivot_longer(cols = c(redness, greenness, blueness),
names_to = 'color_component',
values_to = 'value')
ggplot() +
geom_density_ridges(data = answers_rgb,
aes(x = value, y = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~colorblind, ncol = 1)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~colorblind, ncol = 1)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = colorblind),
scale = 1.5, alpha = 0.8) +
facet_wrap(~color_component, ncol = 1)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = colorblind),
scale = 1.5, alpha = 0.8)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = colorblind, group = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~color_component, ncol = 1)
ggplot() +
geom_density_ridges(data = answers_ridges[answers_ridges$color_component == 'redness', ],
aes(x = value, y = colorblind),
scale = 1.5, alpha = 0.8) +
facet_wrap(~color_component, ncol = 1)
ggplot() +
geom_density_ridges(data = answers_ridges[answers_ridges$color_component == 'redness', ],
aes(x = value, y = colorblind),
scale = 1.5, alpha = 0.8)
answers_rgb = full_join(answers, users) %>%
filter(rank == 5, !is.na(colorblind)) %>%
select(colorblind, hex) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(redness = rgb[1],
greenness = rgb[2],
blueness = rgb[3]) %>%
ungroup()
answers_ridges = answers_rgb %>%
pivot_longer(cols = c(redness, greenness, blueness),
names_to = 'color_component',
values_to = 'value')
ggplot() +
geom_density_ridges(data = answers_ridges[answers_ridges$color_component == 'redness', ],
aes(x = value, y = colorblind),
scale = 1.5, alpha = 0.8)
View(answers_ridges)
ggplot() +
geom_density_ridges(data = answers_ridges[answers_ridges$color_component == 'redness', ],
aes(x = value, y = as.factor(colorblind)),
scale = 1.5, alpha = 0.8)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = as.factor(colorblind)),
scale = 1.5, alpha = 0.8)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~color_component, ncol = 1)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~color_component, ncol = 3)
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, y = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~color_component, ncol = 3)
_ridges
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
facet_wrap(~color_component, ncol = 3)
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(~color_component, ncol = 3)
answers_rgb = full_join(answers, users) %>%
filter(rank == 5, !is.na(colorblind)) %>%
select(colorblind, hex) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(Red = rgb[1],
Green = rgb[2],
Blue = rgb[3]) %>%
ungroup()
answers_ridges = answers_rgb %>%
pivot_longer(cols = c(redness, greenness, blueness),
names_to = 'color_component',
values_to = 'value')
ggplot() +
geom_density_ridges(data = answers_ridges,
aes(x = value, y = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(~color_component, ncol = 3)
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, linetype = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(~color_component, ncol = 3)
answers_rgb = full_join(answers, users) %>%
filter(!is.na(colorblind)) %>%
select(colorblind, hex) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(Red = rgb[1],
Green = rgb[2],
Blue = rgb[3]) %>%
ungroup()
answers_ridges = answers_rgb %>%
pivot_longer(cols = c(Red, Green, Blue),
names_to = 'color_component',
values_to = 'value')
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, linetype = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(rank~color_component, ncol = 3)
answers_rgb = full_join(answers, users) %>%
filter(!is.na(colorblind)) %>%
select(colorblind, hex, rank) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(Red = rgb[1],
Green = rgb[2],
Blue = rgb[3]) %>%
ungroup()
answers_ridges = answers_rgb %>%
pivot_longer(cols = c(Red, Green, Blue),
names_to = 'color_component',
values_to = 'value')
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, linetype = as.factor(colorblind), color = color_component),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(rank~color_component, ncol = 3)
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, linetype = as.factor(colorblind), color = rank),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(~color_component, ncol = 3)
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, linetype = as.factor(colorblind), fill = rank),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(~color_component, ncol = 3)
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, linetype = as.factor(colorblind), color = rank),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(~color_component, ncol = 3)
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, linetype = as.factor(colorblind), color = as.factor(rank)),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(~color_component, ncol = 3)
answers_rgb = full_join(answers, users) %>%
filter(!is.na(colorblind), !is.na(rank)) %>%
select(colorblind, hex, rank) %>%
rowwise() %>%
mutate(rgb = list(as.numeric(col2rgb(hex)))) %>%
mutate(Red = rgb[1],
Green = rgb[2],
Blue = rgb[3]) %>%
ungroup()
answers_ridges = answers_rgb %>%
pivot_longer(cols = c(Red, Green, Blue),
names_to = 'color_component',
values_to = 'value')
ggplot() +
geom_density(data = answers_ridges,
aes(x = value, linetype = as.factor(colorblind), color = as.factor(rank)),
scale = 1.5, alpha = 0.8) +
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
facet_wrap(~color_component, ncol = 3)
